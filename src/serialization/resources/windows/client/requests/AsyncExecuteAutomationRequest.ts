/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Airtop from "../../../../../api/index";
import * as core from "../../../../../core";
import { AsyncConfig } from "../../../../types/AsyncConfig";

export const AsyncExecuteAutomationRequest: core.serialization.Schema<
    serializers.AsyncExecuteAutomationRequest.Raw,
    Airtop.AsyncExecuteAutomationRequest
> = core.serialization.object({
    async: AsyncConfig.optional(),
    automationId: core.serialization.string(),
    clientRequestId: core.serialization.string().optional(),
    costThresholdCredits: core.serialization.number().optional(),
    parameters: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    timeThresholdSeconds: core.serialization.number().optional(),
});

export declare namespace AsyncExecuteAutomationRequest {
    interface Raw {
        async?: AsyncConfig.Raw | null;
        automationId: string;
        clientRequestId?: string | null;
        costThresholdCredits?: number | null;
        parameters?: Record<string, unknown> | null;
        timeThresholdSeconds?: number | null;
    }
}
