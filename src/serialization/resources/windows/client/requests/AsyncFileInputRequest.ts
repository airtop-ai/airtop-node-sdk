/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Airtop from "../../../../../api/index";
import * as core from "../../../../../core";
import { AsyncConfig } from "../../../../types/AsyncConfig";
import { MicroInteractionConfigWithExperimental } from "../../../../types/MicroInteractionConfigWithExperimental";

export const AsyncFileInputRequest: core.serialization.Schema<
    serializers.AsyncFileInputRequest.Raw,
    Airtop.AsyncFileInputRequest
> = core.serialization.object({
    async: AsyncConfig.optional(),
    clientRequestId: core.serialization.string().optional(),
    configuration: MicroInteractionConfigWithExperimental.optional(),
    costThresholdCredits: core.serialization.number().optional(),
    elementDescription: core.serialization.string(),
    fileId: core.serialization.string().optional(),
    fileName: core.serialization.string().optional(),
    timeThresholdSeconds: core.serialization.number().optional(),
    waitForNavigation: core.serialization.boolean().optional(),
});

export declare namespace AsyncFileInputRequest {
    export interface Raw {
        async?: AsyncConfig.Raw | null;
        clientRequestId?: string | null;
        configuration?: MicroInteractionConfigWithExperimental.Raw | null;
        costThresholdCredits?: number | null;
        elementDescription: string;
        fileId?: string | null;
        fileName?: string | null;
        timeThresholdSeconds?: number | null;
        waitForNavigation?: boolean | null;
    }
}
