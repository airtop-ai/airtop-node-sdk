/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Windows } from "./api/resources/windows/client/Client";
import { Extensions } from "./api/resources/extensions/client/Client";
import { Profiles } from "./api/resources/profiles/client/Client";
import { Requests } from "./api/resources/requests/client/Client";
import { Sessions } from "./api/resources/sessions/client/Client";

export declare namespace AirtopClient {
    interface Options {
        environment?: core.Supplier<environments.AirtopEnvironment | string>;
        apiKey: core.Supplier<core.BearerToken>;
        fetcher?: core.FetchFunction;
    }

    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
    }
}

export class AirtopClient {
    constructor(protected readonly _options: AirtopClient.Options) {}

    protected _windows: Windows | undefined;

    public get windows(): Windows {
        return (this._windows ??= new Windows(this._options));
    }

    protected _extensions: Extensions | undefined;

    public get extensions(): Extensions {
        return (this._extensions ??= new Extensions(this._options));
    }

    protected _profiles: Profiles | undefined;

    public get profiles(): Profiles {
        return (this._profiles ??= new Profiles(this._options));
    }

    protected _requests: Requests | undefined;

    public get requests(): Requests {
        return (this._requests ??= new Requests(this._options));
    }

    protected _sessions: Sessions | undefined;

    public get sessions(): Sessions {
        return (this._sessions ??= new Sessions(this._options));
    }
}
