name: ci

on: [push]      

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Compile
        run: |
          yarn install
          yarn build
          yarn compile-nobase
          yarn biome:lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Compile
        run: yarn && yarn test

  publish:
    needs: [ compile, test ]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v3
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: yarn build

      - name: Publish to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          if [[ ${GITHUB_REF} == *alpha* ]]; then
            npm publish --access public --tag alpha
          elif [[ ${GITHUB_REF} == *beta* ]]; then
            npm publish --access public --tag beta
          else
            npm publish --access public
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Split tag
        env:
          BRANCH: ${{ github.ref_name }}
        id: split
        run: echo "value=${{ github.ref || format('{0}{1}', 'refs/tags/', github.ref) }}" >> $GITHUB_OUTPUT

      - name: 'Slack notify'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              username: 'SDK Deployer',
              icon_emoji: ':octocat:',
              attachments: [{
                color: 'good',
                blocks: [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": `Node SDK v${{ steps.split.outputs.fragment }} released ðŸš€`
                    }
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.AIRTOP_SLACK_WEBHOOK_URL }}
